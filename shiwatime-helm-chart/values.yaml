# Default values for shiwatime-backend-chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

global:
  storageClass: "microk8s-hostpath"
  
elasticsearch:
  enabled: true
  replicas: 1
  minimumMasterNodes: 1
  image:
    repository: docker.elastic.co/elasticsearch/elasticsearch
    tag: "7.17.9"
  resources:
    requests:
      memory: "2Gi"
      cpu: "1000m"
    limits:
      memory: "4Gi"
      cpu: "2000m"
  volumeClaimTemplate:
    accessModes: [ "ReadWriteOnce" ]
    resources:
      requests:
        storage: 30Gi
  esJavaOpts: "-Xmx2g -Xms2g"
  service:
    type: LoadBalancer
    port: 9200

grafana:
  enabled: true
  image:
    repository: grafana/grafana
    tag: "9.4.7"
  adminUser: admin
  adminPassword: admin
  service:
    type: LoadBalancer
    port: 80
    targetPort: 3000
  persistence:
    enabled: true
    size: 10Gi
  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
        - name: Elasticsearch
          type: elasticsearch
          access: proxy
          url: http://{{ .Release.Name }}-elasticsearch:9200
          isDefault: true
          jsonData:
            esVersion: "7.10+"
            timeField: "@timestamp"
  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
        - name: 'shiwatime'
          orgId: 1
          folder: 'SHIWA TIME'
          type: file
          disableDeletion: false
          editable: true
          options:
            path: /var/lib/grafana/dashboards/shiwatime
  dashboards:
    shiwatime:
      shiwatime-overview:
        json: |
          {
            "dashboard": {
              "title": "SHIWA TIME Overview",
              "uid": "shiwatime-overview",
              "tags": ["shiwatime"],
              "timezone": "browser",
              "panels": []
            }
          }
  plugins:
    - grafana-clock-panel
    - grafana-simple-json-datasource
  sidecar:
    dashboards:
      enabled: true
      label: grafana_dashboard
    datasources:
      enabled: true
      label: grafana_datasource

prometheus:
  enabled: true
  image:
    repository: prom/prometheus
    tag: "v2.42.0"
  service:
    type: ClusterIP
    port: 9090
  persistence:
    enabled: true
    size: 20Gi
  retention: 30d
  resources:
    requests:
      memory: "512Mi"
      cpu: "500m"
    limits:
      memory: "2Gi"
      cpu: "1000m"

alertmanager:
  enabled: true
  image:
    repository: prom/alertmanager
    tag: "v0.25.0"
  service:
    type: ClusterIP
    port: 9093
  persistence:
    enabled: true
    size: 5Gi
  config:
    global:
      resolve_timeout: 5m
    route:
      group_by: ['alertname', 'cluster', 'service']
      group_wait: 10s
      group_interval: 10s
      repeat_interval: 12h
      receiver: 'shiwatime-team'
    receivers:
      - name: 'shiwatime-team'
        email_configs:
          - to: 'alerts@shiwatime.io'

nodeExporter:
  enabled: true
  image:
    repository: prom/node-exporter
    tag: "v1.5.0"
  service:
    type: ClusterIP
    port: 9100

redis:
  enabled: true
  image:
    repository: redis
    tag: "7.0-alpine"
  service:
    type: ClusterIP
    port: 6379
  persistence:
    enabled: true
    size: 8Gi
  resources:
    requests:
      memory: "256Mi"
      cpu: "100m"
    limits:
      memory: "512Mi"
      cpu: "250m"

postgresql:
  enabled: true
  image:
    repository: postgres
    tag: "15-alpine"
  auth:
    postgresPassword: "shiwatime123"
    database: "shiwatime"
  service:
    type: ClusterIP
    port: 5432
  persistence:
    enabled: true
    size: 10Gi
  resources:
    requests:
      memory: "256Mi"
      cpu: "250m"
    limits:
      memory: "512Mi"
      cpu: "500m"

shiwatime:
  enabled: true
  image:
    repository: shiwatime/collector
    tag: "latest"
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: 8080
  resources:
    requests:
      memory: "256Mi"
      cpu: "100m"
    limits:
      memory: "512Mi"
      cpu: "500m"
  config:
    logLevel: "info"
    metricsInterval: "10s"

ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts:
    - host: shiwatime.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []

serviceAccount:
  create: true
  annotations: {}
  name: ""

podAnnotations: {}

podSecurityContext: {}

securityContext: {}

nodeSelector: {}

tolerations: []

affinity: {}

# Custom branding for SHIWA TIME
branding:
  logoUrl: "https://shiwatime.io/logo.png"
  primaryColor: "#4A90E2"
  secondaryColor: "#F5A623"
  companyName: "SHIWA TIME"
  supportEmail: "support@shiwatime.io"