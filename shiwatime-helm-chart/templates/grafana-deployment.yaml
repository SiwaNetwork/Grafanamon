{{- if .Values.grafana.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "shiwatime-backend-chart.fullname" . }}-grafana
  labels:
    {{- include "shiwatime-backend-chart.labels" . | nindent 4 }}
    app.kubernetes.io/component: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "shiwatime-backend-chart.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: grafana
  template:
    metadata:
      labels:
        {{- include "shiwatime-backend-chart.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: grafana
    spec:
      containers:
      - name: grafana
        image: "{{ .Values.grafana.image.repository }}:{{ .Values.grafana.image.tag }}"
        imagePullPolicy: IfNotPresent
        env:
        - name: GF_SECURITY_ADMIN_USER
          value: {{ .Values.grafana.adminUser }}
        - name: GF_SECURITY_ADMIN_PASSWORD
          value: {{ .Values.grafana.adminPassword }}
        - name: GF_INSTALL_PLUGINS
          value: {{ join "," .Values.grafana.plugins }}
        - name: GF_SERVER_ROOT_URL
          value: "%(protocol)s://%(domain)s:%(http_port)s/"
        - name: GF_SERVER_SERVE_FROM_SUB_PATH
          value: "false"
        # SHIWA TIME Branding
        - name: GF_AUTH_LOGIN_COOKIE_NAME
          value: "shiwatime_session"
        - name: GF_AUTH_ANONYMOUS_ORG_NAME
          value: "{{ .Values.branding.companyName }}"
        - name: GF_AUTH_BASIC_REALM
          value: "{{ .Values.branding.companyName }} Monitoring"
        - name: GF_PANELS_DISABLE_SANITIZE_HTML
          value: "true"
        - name: GF_RENDERING_SERVER_URL
          value: "http://localhost:3000/render"
        - name: GF_RENDERING_CALLBACK_URL
          value: "http://localhost:3000/"
        - name: GF_LOG_FILTERS
          value: "rendering:debug"
        ports:
        - containerPort: 3000
          name: http
          protocol: TCP
        volumeMounts:
        - name: grafana-storage
          mountPath: /var/lib/grafana
        - name: grafana-datasources
          mountPath: /etc/grafana/provisioning/datasources
        - name: grafana-dashboards
          mountPath: /etc/grafana/provisioning/dashboards
        - name: shiwatime-dashboards
          mountPath: /var/lib/grafana/dashboards/shiwatime
        - name: grafana-config
          mountPath: /etc/grafana/grafana.ini
          subPath: grafana.ini
        - name: shiwatime-branding
          mountPath: /usr/share/grafana/public/img
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        readinessProbe:
          httpGet:
            path: /api/health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /api/health
            port: http
          initialDelaySeconds: 60
          periodSeconds: 10
      volumes:
      - name: grafana-storage
        {{- if .Values.grafana.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ include "shiwatime-backend-chart.fullname" . }}-grafana
        {{- else }}
        emptyDir: {}
        {{- end }}
      - name: grafana-datasources
        configMap:
          name: {{ include "shiwatime-backend-chart.fullname" . }}-grafana-datasources
      - name: grafana-dashboards
        configMap:
          name: {{ include "shiwatime-backend-chart.fullname" . }}-grafana-dashboards
      - name: shiwatime-dashboards
        configMap:
          name: {{ include "shiwatime-backend-chart.fullname" . }}-shiwatime-dashboards
      - name: grafana-config
        configMap:
          name: {{ include "shiwatime-backend-chart.fullname" . }}-grafana-config
      - name: shiwatime-branding
        configMap:
          name: {{ include "shiwatime-backend-chart.fullname" . }}-branding
{{- end }}